<Window  
        x:Class="OPTEL.UI.Desktop.Views.PlanningConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OPTEL.UI.Desktop.Views"
        xmlns:behaviours="clr-namespace:OPTEL.UI.Desktop.Behaviours"
        xmlns:localization="clr-namespace:EasyLocalization.Localization;assembly=EasyLocalization"
        xmlns:intr="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:draw="clr-namespace:System.Drawing;assembly=System.Drawing"
        mc:Ignorable="d"
        Title="{localization:Localize Key=Window.Planning.Title}" Height="409" Width="761"
        Icon="{StaticResource ApplicationIconBitmapImage}"        
        WindowStartupLocation="CenterOwner">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="413*"/>
            <ColumnDefinition Width="199*"/>
        </Grid.ColumnDefinitions>
        <TabControl Grid.Column="0" Grid.Row="0" SelectedIndex="{Binding CurrentSelectedTabIndex}" x:Name="tabControl" Grid.ColumnSpan="2">
            <TabControl.ItemContainerStyle>
                <Style TargetType="{x:Type TabItem}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Visibility}" Value="Visible">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TabControl.ItemContainerStyle>
            <TabItem>
                <Grid Margin="5,5,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0">
                        <TextBlock Text="Step 1 of 4: Select planning interval and objective function" TextWrapping="Wrap"/>
                        <Label Content="Planning start date"/>
                        <DatePicker SelectedDate="{Binding Path=PlanningStartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="Planning end date"/>
                        <DatePicker SelectedDate="{Binding Path=PlanningEndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Label Content="Objective function"/>
                        <ComboBox ItemsSource="{Binding ObjectiveFunctions}" SelectedItem="{Binding SelectedObjectiveFunction}"/>
                    </StackPanel>
                    <DockPanel Grid.Column="0" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                        <Button HorizontalAlignment="Center" Margin="0,0,5,0" Command="{Binding MoveToPreviousTabCommand}" IsEnabled="false">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource LeftBitmapImage}" Height="16" Margin="0, 0, 5, 0"/>
                                <TextBlock Text="Previous step" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <Button HorizontalAlignment="Center" Command="{Binding MoveToNextTabCommand}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Next step" VerticalAlignment="Center"/>
                                <Image Source="{StaticResource RightBitmapImage}" Height="16"  Margin="5,0,0,0"/>
                            </StackPanel>
                        </Button>
                        <Button  Grid.Column="0" Grid.Row="2"  Content="Click" Click="Button_Click"/>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem>
                <Grid Margin="5,5,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Step 2 of 4: Select orders to be used in calculation of optimal production plan" TextWrapping="Wrap" Grid.Column="0" Grid.Row="0" Margin="5,5,5,5"/>
                    <DataGrid ItemsSource="{Binding Path=Orders, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
          CanUserReorderColumns="False" CanUserResizeColumns="False" 
          CanUserResizeRows="False" CanUserSortColumns="False"
                      CanUserAddRows="false"
                      CanUserDeleteRows="false"
                      SelectionMode="Single" SelectionUnit="FullRow"
                      AutoGenerateColumns="False"
                      Grid.Column="0" Grid.Row="1"
                      SelectedItem="{Binding SelectedOrder, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      x:Name="OrdersList"
                      behaviours:DataGridBehavior.DisplayRowNumber="True">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Binding="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding Path=OrderNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Orders.OrderNumber}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Path=Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Orders.Width}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Path=QuantityInRunningMeter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Orders.QuantityInRunningMeter}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Path=FilmRecipe.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Orders.FilmRecipe}" Width="auto" IsReadOnly="True"/>
                            <DataGridTemplateColumn Header="{localization:Localize Key=Window.Orders.PlanningEndDate}" Width="auto" IsReadOnly="True">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <xctk:DateTimePicker Value="{Binding Path=PlanningEndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="true"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Binding="{Binding Path=PriceOverdue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Orders.PriceOverdue}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Path=ParentCustomer.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Orders.ParentCustomer}" Width="*" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DockPanel Grid.Column="0" Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,5,0,0">
                        <Button HorizontalAlignment="Center" Margin="0,0,5,0" Command="{Binding MoveToPreviousTabCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource LeftBitmapImage}" Height="16" Margin="0,0,5,0"/>
                                <TextBlock Text="Previous step" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <Button HorizontalAlignment="Center"  Command="{Binding MoveToNextTabCommand}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Next step" VerticalAlignment="Center"/>
                                <Image Source="{StaticResource RightBitmapImage}" Height="16"  Margin="5,0,0,0"/>
                            </StackPanel>
                        </Button>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem>
                <Grid Margin="5,5,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Step 3 of 4: Select production lines to be used in calculation of optimal production plan" TextWrapping="Wrap" Grid.Column="0" Grid.Row="0" Margin="5,5,5,5"/>
                    <DataGrid ItemsSource="{Binding Path=ProductionLines, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
          CanUserReorderColumns="False" CanUserResizeColumns="False" 
          CanUserResizeRows="False" CanUserSortColumns="False"
                      CanUserAddRows="false"
                      CanUserDeleteRows="false"
                      SelectionMode="Single" SelectionUnit="FullRow"
                      AutoGenerateColumns="False"
                      Grid.Column="0" Grid.Row="1"
                      SelectedItem="{Binding SelectedProductionLine, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                      x:Name="ProductionLinesList"
                      behaviours:DataGridBehavior.DisplayRowNumber="True">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Binding="{Binding Path=IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="" Width="auto"/>
                            <DataGridTextColumn Binding="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Extruders.Code}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Path=Code, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Extruders.Name}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Path=HourCost, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Extruders.HourCost}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Path=MaxProductionSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Extruders.MaxProductionSpeed}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Header="{localization:Localize Key=Window.Extruders.Width}" Width="auto" IsReadOnly="True">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0} - {1}">
                                        <Binding Path="WidthMin" />
                                        <Binding Path="WidthMax" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="{localization:Localize Key=Window.Extruders.Thickness}" Width="auto" IsReadOnly="True">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0} - {1}">
                                        <Binding Path="ThicknessMin" />
                                        <Binding Path="ThicknessMax" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="{localization:Localize Key=Window.Extruders.Weight}" Width="auto" IsReadOnly="True">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0} - {1}">
                                        <Binding Path="WeightMin" />
                                        <Binding Path="WeightMax" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="{localization:Localize Key=Window.Extruders.Length}" Width="auto" IsReadOnly="True">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding StringFormat="{}{0} - {1}">
                                        <Binding Path="LengthMin" />
                                        <Binding Path="LengthMax" />
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Binding="{Binding Path=WidthChangeTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Extruders.WidthChangeTime}" Width="auto" IsReadOnly="True"/>
                            <DataGridTextColumn Binding="{Binding Path=ThicknessChangeTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Header="{localization:Localize Key=Window.Extruders.ThicknessChangeTime}" Width="*" IsReadOnly="True"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DockPanel Grid.Column="0" Grid.Row="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,5,0,0">
                        <Button HorizontalAlignment="Center" Margin="0,0,5,0" Command="{Binding MoveToPreviousTabCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource LeftBitmapImage}" Height="16" Margin="0, 0, 5, 0"/>
                                <TextBlock Text="Previous step" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <Button HorizontalAlignment="Center" Command="{Binding MoveToNextTabCommand}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Next step" VerticalAlignment="Center"/>
                                <Image Source="{StaticResource RightBitmapImage}" Height="16" Margin="5,0,0,0"/>
                            </StackPanel>
                        </Button>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem>
                <Grid Margin="5,5,5,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Orientation="Vertical" Grid.Column="0" Grid.Row="0">
                        <TextBlock Text="Step 4 of 4: Select planning algorithm" TextWrapping="Wrap" Grid.Column="0" Grid.Row="0"/>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Planning algorithm"/>
                            <Image Source="{Binding Source={x:Static draw:SystemIcons.Question}, Converter={StaticResource IconToImageSourceConverter}, Mode=OneWay}" Width="20" Height="20" ToolTip="Planning help"/>
                        </StackPanel>
                        <ComboBox ItemsSource="{Binding PlanningAlgorithms}" SelectedItem="{Binding SelectedPlanningAlgorithm}"/>
                        <CheckBox Content="Display decision tree" Margin="5,5,0,0" IsChecked="{Binding IsBuildDecisionTreeChecked}"/>
                    </StackPanel>
                    <DockPanel Grid.Column="0" Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0,5,0,0">
                        <Button HorizontalAlignment="Center" Margin="0,0,5,0" Command="{Binding MoveToPreviousTabCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource LeftBitmapImage}" Height="16" Margin="0, 0, 5, 0"/>
                                <TextBlock Text="Previous step" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                        <Button HorizontalAlignment="Center" Command="{Binding StartPlanningCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource ApplicationIconBitmapImage}" Height="16" Margin="0,0,5,0"/>
                                <TextBlock Text="Find optimal production plan" VerticalAlignment="Center"/>
                            </StackPanel>
                        </Button>
                    </DockPanel>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>